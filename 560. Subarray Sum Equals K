// ----------------------------------------------------------------------------------------brute force method :-----------------------------------------------------------------------------------------
class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
     int count = 0;
     int n = nums.size();

    for (int i = 0; i < n; i++) {
     int sum = 0;
    for (int j = i; j < n; j++) {
     sum += nums[j];
     if (sum == k) {
     count++;
       }
     }
 }
        
  return count;
  
    }
};
------------------------------------------------------------------------------------------------- using hash map : -----------------------------------------------------------------------------------------

class Solution {
public:
        int subarraySum(vector<int>& nums, int k) {
        unordered_map<int, int> prefixSumCount;  
        prefixSumCount[0] = 1;  
        int current_sum = 0;
        int count = 0;
    
        for (int num : nums) {
            current_sum += num;  

          
            if (prefixSumCount.find(current_sum - k) != prefixSumCount.end()) {
        count += prefixSumCount[current_sum - k];
            }

            prefixSumCount[current_sum]++;
        }
        
        return count;
    }
};
